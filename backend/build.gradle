import java.time.Instant

buildscript {
    ext {
        protobufVersion = '3.23.4'
        protobufPluginVersion = '0.9.4'
        grpcVersion = '1.65.0'
    }
}

plugins {
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'

    id 'org.jetbrains.kotlin.jvm' version '2.0.0'
    id 'org.jetbrains.kotlin.plugin.spring' version '2.0.0'

    id 'com.google.cloud.tools.jib' version '3.4.0'

    id 'com.google.protobuf' version "${protobufPluginVersion}"
}

group = 'com.mobile.api'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'

    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    /* Protobuf implementation */
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "com.google.protobuf:protobuf-kotlin:4.27.2"

    /* Test implementation */
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

jib {
    container.creationTime = Instant.now().toString()
    version = "${project.version}"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }

    plugins {
        'grpckt' {
            artifact = 'io.grpc:protoc-gen-grpc-kotlin:1.4.1'
        }
    }

    generateProtoTasks {
        ofSourceSet("main").each {
            it.plugins {
                'grpckt'
            }
            it.builtins {
                "kotlin"
            }
        }
    }
}

tasks.register('welcome') {
    doLast {
        println("My custom task")
    }
}

